/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import controler.Controler;
import domen.AbstractObject;
import domen.Bransa;
import domen.Kompanija;
import domen.Praksa;
import domen.Student;
import domen.Zaposleni;
import exception.BrisanjeKompanijeException;
import exception.BrisanjeStudentaException;
import exception.UcitavanjeKompanijaException;
import exception.UcitavanjeStudenataException;
import java.awt.HeadlessException;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import model.KompanijaTableModel;
import model.PraksaTableModel;
import model.StudentTableModel;

/**
 *
 * @author FILIP
 */
public class MainForm extends javax.swing.JFrame {
    
    private Zaposleni zaposleni;
    private Praksa praksa;
    
    public StudentTableModel studentModel;
    public KompanijaTableModel kompanijaModel;
    public PraksaTableModel praksaModel;
    
    private List<AbstractObject> studenti;
    private List<AbstractObject> kompanije;    
    private List<AbstractObject> prakse;
    private Student globalStudent;
    private Kompanija globalKompanija;
    /**
     * Creates new form MainFrom
     * @param zaposleni
     */
    
    
    public MainForm(Zaposleni zaposleni) throws HeadlessException {
        this();
        this.zaposleni = zaposleni;
        
    }

    public MainForm() {
        initComponents();
        praksa = new Praksa();
        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        srediStudentTabelu();
        srediKompanijaTabelu();
        srediPraksaTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableStudenti = new javax.swing.JTable();
        jTextFieldKriterijumStudent = new javax.swing.JTextField();
        jButtonPretraziStudenta = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldKriterijumKompanija = new javax.swing.JTextField();
        jButtonPronadjiKompaniju = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableKompanija = new javax.swing.JTable();
        jButtonIzmijeniStudenta = new javax.swing.JButton();
        jButtonObrisiStudenta = new javax.swing.JButton();
        jButtonDodajStudentaUPraksu = new javax.swing.JButton();
        jButtonDodajKompanijuUPraksu = new javax.swing.JButton();
        jButtonImijeniKompaniju = new javax.swing.JButton();
        jButtonObrisiKompaniju = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabelKompanijaZaPraksu = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldDatumPocetka = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldDatumZavrsetka = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaKomentar = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        jSpinnerOcena = new javax.swing.JSpinner();
        jButtonUnosPrakse = new javax.swing.JButton();
        jButtonUkloniStudentaIzPrakse = new javax.swing.JButton();
        jButtonUkloniKompanijuIzPrakse = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxBranse = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabelStudentZaPraksu = new javax.swing.JLabel();
        jTextFieldKriterijumPraksa = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTablePrakse = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Evidencija praksi");

        jTableStudenti.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableStudenti);

        jButtonPretraziStudenta.setText("Pretrazi");
        jButtonPretraziStudenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPretraziStudentaActionPerformed(evt);
            }
        });

        jLabel1.setText("Unesite kljucnu rijec za pretragu studenta:");

        jLabel2.setText("Unesite kljucnu rijec za pretragu kompanije:");

        jButtonPronadjiKompaniju.setText("Pretrazi");
        jButtonPronadjiKompaniju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPronadjiKompanijuActionPerformed(evt);
            }
        });

        jTableKompanija.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTableKompanija);

        jButtonIzmijeniStudenta.setText("Izmijeni");
        jButtonIzmijeniStudenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIzmijeniStudentaActionPerformed(evt);
            }
        });

        jButtonObrisiStudenta.setText("Obrisi");
        jButtonObrisiStudenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiStudentaActionPerformed(evt);
            }
        });

        jButtonDodajStudentaUPraksu.setText("Dodaj u praksu");
        jButtonDodajStudentaUPraksu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajStudentaUPraksuActionPerformed(evt);
            }
        });

        jButtonDodajKompanijuUPraksu.setText("Dodaj u praksu");
        jButtonDodajKompanijuUPraksu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajKompanijuUPraksuActionPerformed(evt);
            }
        });

        jButtonImijeniKompaniju.setText("Izmijeni");
        jButtonImijeniKompaniju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonImijeniKompanijuActionPerformed(evt);
            }
        });

        jButtonObrisiKompaniju.setText("Obrisi");
        jButtonObrisiKompaniju.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonObrisiKompanijuActionPerformed(evt);
            }
        });

        jLabel6.setText("Kompanija:");

        jLabelKompanijaZaPraksu.setText("/");

        jLabel5.setText("Unesite datum pocetka prakse:");

        jTextFieldDatumPocetka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDatumPocetkaActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel7.setText("*unesite datum u formatu yyyy-MM-dd");

        jLabel8.setText("Unesite datum zavrsetka prakse:");

        jTextFieldDatumZavrsetka.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDatumZavrsetkaActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel9.setText("*unesite datum u formatu DD/MM/YYYY");

        jLabel10.setText("Komentar poslodavca:");

        jTextAreaKomentar.setColumns(20);
        jTextAreaKomentar.setRows(5);
        jScrollPane4.setViewportView(jTextAreaKomentar);

        jLabel11.setText("Ocena poslodavca:");

        jSpinnerOcena.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        jButtonUnosPrakse.setText("Unesi praksu");
        jButtonUnosPrakse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUnosPrakseActionPerformed(evt);
            }
        });

        jButtonUkloniStudentaIzPrakse.setText("-");
        jButtonUkloniStudentaIzPrakse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUkloniStudentaIzPrakseActionPerformed(evt);
            }
        });

        jButtonUkloniKompanijuIzPrakse.setText("-");
        jButtonUkloniKompanijuIzPrakse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUkloniKompanijuIzPrakseActionPerformed(evt);
            }
        });

        jLabel13.setText("Odaberi Bransu:");

        jLabel3.setText("Student:");

        jLabelStudentZaPraksu.setText("/");

        jButton1.setText("Pretrazi");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTablePrakse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTablePrakse);

        jButton3.setText("Prikazi podatke za praksu");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jMenuBar1.setMinimumSize(new java.awt.Dimension(1, 1));
        jMenuBar1.setName(""); // NOI18N

        jMenu1.setText(" Studenti");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Unesi novog studenta");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Kompanije");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_K, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem2.setText(" Unesi novu kompaniju");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButtonObrisiStudenta)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButtonIzmijeniStudenta)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButtonDodajStudentaUPraksu))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextFieldKriterijumStudent)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonPretraziStudenta))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jTextFieldKriterijumKompanija)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButtonPronadjiKompaniju)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButtonObrisiKompaniju)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButtonImijeniKompaniju)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButtonDodajKompanijuUPraksu))))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonUkloniStudentaIzPrakse)
                            .addComponent(jButtonUkloniKompanijuIzPrakse)))
                    .addComponent(jLabel2))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelStudentZaPraksu)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jTextFieldKriterijumPraksa)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton1)
                                        .addGap(78, 78, 78))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabelKompanijaZaPraksu))
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTextFieldDatumPocetka, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel8)
                                            .addComponent(jTextFieldDatumZavrsetka, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(jScrollPane4)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13)
                                            .addComponent(jComboBoxBranse, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jSpinnerOcena))
                                        .addGap(76, 76, 76)
                                        .addComponent(jButtonUnosPrakse))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jScrollPane3))
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldKriterijumStudent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonPretraziStudenta))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonUkloniStudentaIzPrakse)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jLabelStudentZaPraksu)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabelKompanijaZaPraksu)
                            .addComponent(jButtonUkloniKompanijuIzPrakse))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(7, 7, 7)
                                .addComponent(jTextFieldDatumPocetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10)
                                .addGap(1, 1, 1))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextFieldDatumZavrsetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addGap(22, 22, 22)))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxBranse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSpinnerOcena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonUnosPrakse))
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonIzmijeniStudenta)
                            .addComponent(jButtonObrisiStudenta)
                            .addComponent(jButtonDodajStudentaUPraksu)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)))
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldKriterijumKompanija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPronadjiKompaniju)
                    .addComponent(jTextFieldKriterijumPraksa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonDodajKompanijuUPraksu)
                        .addComponent(jButtonImijeniKompaniju)
                        .addComponent(jButtonObrisiKompaniju)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        PodaciStudentForm psf = new PodaciStudentForm(this);
        psf.setVisible(true);
        psf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        PodaciKompanijaForm pkf = new PodaciKompanijaForm(this);
        pkf.setVisible(true);
        pkf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButtonPretraziStudentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPretraziStudentaActionPerformed
        // TODO add your handling code here:
        String kljucnaRijec = jTextFieldKriterijumStudent.getText();
        List<AbstractObject> pronadjeniStudenti = new ArrayList<>();
        for (AbstractObject student : studenti) {
            if(student instanceof Student) {
                if(student.toString().toLowerCase().indexOf(kljucnaRijec.toLowerCase()) != -1) {
                    pronadjeniStudenti.add((Student)student);
                }
            }

        }
        if(pronadjeniStudenti.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sistem nije pronasao studente po zadatoj vrijednosti");
        }
        studentModel.setStudenti(pronadjeniStudenti);
        studentModel.fireTableDataChanged();
    }//GEN-LAST:event_jButtonPretraziStudentaActionPerformed

    private void jButtonPronadjiKompanijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPronadjiKompanijuActionPerformed
        // TODO add your handling code here:
        String kljucnaRijec = jTextFieldKriterijumKompanija.getText();
        List<AbstractObject> pronadjeneKompanije = new ArrayList<>();
        for (AbstractObject kompanija : kompanije) {
            if(kompanija instanceof Kompanija) {
                if(kompanija.toString().toLowerCase().indexOf(kljucnaRijec.toLowerCase()) != -1) {
                    pronadjeneKompanije.add((Kompanija)kompanija);
                }
            }

        }
        
        if(pronadjeneKompanije.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sistem nije pronasao kompanije po zadatom kriterijumu.");
        }
        kompanijaModel.setKompanije(pronadjeneKompanije);
        kompanijaModel.fireTableDataChanged();
    }//GEN-LAST:event_jButtonPronadjiKompanijuActionPerformed

    private void jButtonObrisiKompanijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiKompanijuActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            int index = jTableKompanija.getSelectedRow();
            Kompanija kompanija;
            if(index != -1) {
                kompanija = (Kompanija) kompanijaModel.getKompanije().get(jTableKompanija.getSelectedRow());
            } else {
                JOptionPane.showMessageDialog(this, "Morate izabrati kompaniju");
                return;
            }
            kompanija = (Kompanija) kompanijaModel.getKompanije().get(jTableKompanija.getSelectedRow());
            Controler.getInstance().obrisiKompaniju(kompanija);
            //            ako ne baci exception nastavalja se normalno
            kompanijaModel.getKompanije().remove(kompanija);
            kompanijaModel.fireTableDataChanged();
            JOptionPane.showMessageDialog(this, "Uspjesno brisanje kompanije sa podacima " + kompanija);
            srediPraksaTabelu();
        } catch (IOException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BrisanjeKompanijeException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonObrisiKompanijuActionPerformed

    private void jButtonImijeniKompanijuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonImijeniKompanijuActionPerformed
        // TODO add your handling code here:
        int index = jTableKompanija.getSelectedRow();
        Kompanija kompanija;
        if(index != -1) {
            kompanija = (Kompanija) kompanijaModel.getKompanije().get(index);
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati kompaniju");
            return;
        }
        PodaciKompanijaForm psf = new PodaciKompanijaForm(kompanija, this);

        psf.setVisible(true);
        psf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        srediPraksaTabelu();
    }//GEN-LAST:event_jButtonImijeniKompanijuActionPerformed

    private void jButtonDodajKompanijuUPraksuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajKompanijuUPraksuActionPerformed
        // TODO add your handling code here:
        ocistiPoljaZaUnosPrakse();
        int index = jTableKompanija.getSelectedRow();
        Kompanija kompanija;
        if(index != -1) {
            kompanija = (Kompanija) kompanijaModel.getKompanije().get(index);
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati kompaniju");
            return;
        }
        if(praksa.getKompanija()!= null) {
            JOptionPane.showMessageDialog(this, "Kompanija vec izabrana! Ukloni kompaniju iz prakse ako zelis da uneses novu!");
        } else {
            globalKompanija = kompanija;
            praksa.setKompanija(kompanija);
            jLabelKompanijaZaPraksu.setText(kompanija.toString());
            if(!praksa.getKompanija().getBranse().isEmpty()) {
                for (Bransa bransa : praksa.getKompanija().getBranse()) {
                    jComboBoxBranse.addItem(bransa);
                }
            }
        }
    }//GEN-LAST:event_jButtonDodajKompanijuUPraksuActionPerformed

    private void jButtonObrisiStudentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonObrisiStudentaActionPerformed
        try {
            // TODO add your handling code here:
            int index = jTableStudenti.getSelectedRow();
            Student student;
            if(index != -1) {
                student = (Student) studentModel.getStudenti().get(jTableStudenti.getSelectedRow());
            } else {
                JOptionPane.showMessageDialog(this, "Morate izabrati studenta");
                return;
            }
            Controler.getInstance().obrisiStudenta(student);
            //            ako ne baci exception nastavalja se normalno
            studentModel.getStudenti().remove(student);
            studentModel.fireTableDataChanged();
            srediPraksaTabelu();
            JOptionPane.showMessageDialog(this, "Uspjesno brisanje studenta sa podacima " + student);

        } catch (IOException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (BrisanjeStudentaException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonObrisiStudentaActionPerformed

    private void jButtonIzmijeniStudentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIzmijeniStudentaActionPerformed
        // TODO add your handling code here:
        int index = jTableStudenti.getSelectedRow();
        Student student;
        if(index != -1) {
            student = (Student) studentModel.getStudenti().get(jTableStudenti.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati studenta");
            return;
        }
        JOptionPane.showMessageDialog(this, student.getStudentID());
        PodaciStudentForm psf = new PodaciStudentForm(student, this);

        psf.setVisible(true);
        psf.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        srediPraksaTabelu();
    }//GEN-LAST:event_jButtonIzmijeniStudentaActionPerformed

    private void jButtonDodajStudentaUPraksuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajStudentaUPraksuActionPerformed
        // TODO add your handling code here:
        ocistiPoljaZaUnosPrakse();
        int index = jTableStudenti.getSelectedRow();
        Student student;
        if(index != -1) {
            student = (Student) studentModel.getStudenti().get(jTableStudenti.getSelectedRow());
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati studenta");
            return;
        }
        if(praksa.getStudent() != null) {
            JOptionPane.showMessageDialog(this, "Student vec izabran! Ukloni studenta iz prakse ako zelis da uneses novog!");
        } else {
            globalStudent = student;
            praksa.setStudent(student);
            jLabelStudentZaPraksu.setText(student.toString());

        }
    }//GEN-LAST:event_jButtonDodajStudentaUPraksuActionPerformed

    private void jButtonUkloniStudentaIzPrakseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUkloniStudentaIzPrakseActionPerformed
        // TODO add your handling code here:
        if(praksa.getStudent() == null) {
            JOptionPane.showMessageDialog(this, "Student za praksu nije izabran!");
        } else {
            praksa.setStudent(null);
            jLabelStudentZaPraksu.setText("/");
        }

    }//GEN-LAST:event_jButtonUkloniStudentaIzPrakseActionPerformed

    private void jButtonUkloniKompanijuIzPrakseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUkloniKompanijuIzPrakseActionPerformed
        // TODO add your handling code here:
        if(praksa.getKompanija() == null) {
            JOptionPane.showMessageDialog(this, "Kompanija za praksu nije izabrana!");
        } else {
            praksa.setKompanija(null);
            jLabelKompanijaZaPraksu.setText("/");
            jComboBoxBranse.removeAllItems();
        }

    }//GEN-LAST:event_jButtonUkloniKompanijuIzPrakseActionPerformed

    private void jButtonUnosPrakseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUnosPrakseActionPerformed
        // TODO add your handling code here:
        if(praksa.getStudent() == null) {
            JOptionPane.showMessageDialog(this, "Izaberite studenta za praksu!");
            return;
        }
        if(praksa.getKompanija() == null) {
            JOptionPane.showMessageDialog(this, "Izaberite kompaniju za praksu!");
            return;
        }
        SimpleDateFormat datumPocetka = new SimpleDateFormat("yyyy-MM-dd");
        SimpleDateFormat datumZavrsetka = new SimpleDateFormat("yyyy-MM-dd");
        Date pocetak;
        Date kraj;
        try {
            pocetak = datumPocetka.parse(jTextFieldDatumPocetka.getText());
            kraj = datumZavrsetka.parse(jTextFieldDatumZavrsetka.getText());
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Unesite datum u ispravnom formatu!");
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        praksa.setDatumOd(pocetak);
        praksa.setDatumDo(kraj);
        praksa.setKomentarPoslodavca(jTextAreaKomentar.getText());
        praksa.setOcena((int) jSpinnerOcena.getValue());
        praksa.setBransa((Bransa) jComboBoxBranse.getSelectedItem());
        try {
            if(praksa != null) {
                Controler.getInstance().unesiNovuPraksu(praksa);
                JOptionPane.showMessageDialog(this, "Uspesno sacuvana praksa!");
                ocistiPoljaZaUnosPrakse();
                srediPraksaTabelu();
            }
        } catch (IOException ex) {
            Logger.getLogger(PodaciStudentForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(PodaciStudentForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(PodaciStudentForm.class.getName()).log(Level.SEVERE, null, ex);
        }
//        praksa = new Praksa();
    }//GEN-LAST:event_jButtonUnosPrakseActionPerformed

    private void jTextFieldDatumZavrsetkaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDatumZavrsetkaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDatumZavrsetkaActionPerformed

    private void jTextFieldDatumPocetkaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDatumPocetkaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDatumPocetkaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String kljucnaRijec = jTextFieldKriterijumPraksa.getText();
        List<AbstractObject> pronadjenePrakse = new ArrayList<>();
        for (AbstractObject praksa : prakse) {
            if(praksa instanceof Praksa) {
                if(praksa.toString().toLowerCase().indexOf(kljucnaRijec.toLowerCase()) != -1) {
                    pronadjenePrakse.add((Praksa)praksa);
                }
            }

        }
        if(pronadjenePrakse.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Sistem nije pronasao prakse po zadatom kriterijumu.");
        }
        praksaModel.setPrakse(pronadjenePrakse);
        praksaModel.fireTableDataChanged();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        praksa.setKompanija(null);
        praksa.setStudent(null);
        Praksa p = (Praksa) prakse.get(jTablePrakse.getSelectedRow());
        jLabelKompanijaZaPraksu.setText(p.getKompanija().toString());
        jLabelStudentZaPraksu.setText(p.getStudent().toString());
        jTextFieldDatumPocetka.setText(new SimpleDateFormat().format(p.getDatumOd()));
        jTextFieldDatumZavrsetka.setText(new SimpleDateFormat().format(p.getDatumDo()));
        jTextAreaKomentar.setText(p.getKomentarPoslodavca());
        jComboBoxBranse.addItem(p.getBransa());
        jSpinnerOcena.setValue(Integer.valueOf(p.getOcena()));
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonDodajKompanijuUPraksu;
    private javax.swing.JButton jButtonDodajStudentaUPraksu;
    private javax.swing.JButton jButtonImijeniKompaniju;
    private javax.swing.JButton jButtonIzmijeniStudenta;
    private javax.swing.JButton jButtonObrisiKompaniju;
    private javax.swing.JButton jButtonObrisiStudenta;
    private javax.swing.JButton jButtonPretraziStudenta;
    private javax.swing.JButton jButtonPronadjiKompaniju;
    private javax.swing.JButton jButtonUkloniKompanijuIzPrakse;
    private javax.swing.JButton jButtonUkloniStudentaIzPrakse;
    private javax.swing.JButton jButtonUnosPrakse;
    private javax.swing.JComboBox<Bransa> jComboBoxBranse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelKompanijaZaPraksu;
    private javax.swing.JLabel jLabelStudentZaPraksu;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSpinner jSpinnerOcena;
    private javax.swing.JTable jTableKompanija;
    private javax.swing.JTable jTablePrakse;
    private javax.swing.JTable jTableStudenti;
    private javax.swing.JTextArea jTextAreaKomentar;
    private javax.swing.JTextField jTextFieldDatumPocetka;
    private javax.swing.JTextField jTextFieldDatumZavrsetka;
    private javax.swing.JTextField jTextFieldKriterijumKompanija;
    private javax.swing.JTextField jTextFieldKriterijumPraksa;
    private javax.swing.JTextField jTextFieldKriterijumStudent;
    // End of variables declaration//GEN-END:variables

    public void srediStudentTabelu() {
        
        try {
            studenti = Controler.getInstance().ucitajSveStudente();
            studentModel = new StudentTableModel(studenti);
            jTableStudenti.setModel(studentModel);
            studentModel.fireTableDataChanged();
            
            
        } catch (IOException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UcitavanjeStudenataException ex) {
            JOptionPane.showMessageDialog(jMenu1, ex.getMessage());
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public void osveziTabeluStudent() {
        studentModel.fireTableDataChanged();
    }

    public void srediKompanijaTabelu() {
        try {
            kompanije = Controler.getInstance().ucitajSveKompanije();
            kompanijaModel = new KompanijaTableModel(kompanije);
            jTableKompanija.setModel(kompanijaModel);
            kompanijaModel.fireTableDataChanged();
            
            
        } catch (IOException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UcitavanjeKompanijaException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }    
    }

    public void srediPraksaTabelu() {
        try {
            prakse = Controler.getInstance().ucitajSvePrakse();
            praksaModel = new PraksaTableModel(prakse);
            jTablePrakse.setModel(praksaModel);
            praksaModel.fireTableDataChanged();
            
            
        } catch (IOException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }

    private void ocistiPoljaZaUnosPrakse() {
        jLabelStudentZaPraksu.setText("/");
        jLabelKompanijaZaPraksu.setText("/");
        jTextFieldDatumPocetka.setText("");
        jTextFieldDatumZavrsetka.setText("");
        jTextAreaKomentar.setText("");
        jSpinnerOcena.setValue((int) 1);
        jComboBoxBranse.removeAllItems();
    }
}
